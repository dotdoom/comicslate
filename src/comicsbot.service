#!/usr/bin/env bash

set -e

BOT_USER='www-data'
BOT_DIRECTORY='/var/www/.htsecure/comicsbot'

if [ ! -d "${BOT_DIRECTORY?}" ]; then
	# No need to bail out if directory does not exist. Still, lock it down.
	mkdir -m 0700 -p "${BOT_DIRECTORY?}"
	chown "${BOT_USER?}" "${BOT_DIRECTORY?}"
fi

if [ "$(id -u)" -ne "$(id -u $BOT_USER)" ]; then
	echo "Dropping privileges to ${BOT_USER?}."
	exec su - "${BOT_USER?}" --shell /bin/sh --command "$0 $*"
fi

# Keep in sync with Dockerfile.
source '/opt/nvm/nvm.sh'

cd "${BOT_DIRECTORY?}"

__precached=0
precache() {
	if [ $__precached = 0 ]; then
		echo 'precaching sources'
		git init
		git pull --rebase https://github.com/dotdoom/comicsbot || true
		echo 'prebuilding sources'
		nvm install
		nvm use
		npm_config_cache="${BOT_DIRECTORY?}/.npm" \
			npm --loglevel info ci --no-audit --no-save
		__precached=1
	fi
}

start() {
	precache
	echo 'starting comicsbot'
	if [ -f config/config.json ]; then
		npm start |& logger -t comicsbot &
	else
		echo 'config not found, assuming test run' >&2
		cp config/config.example.json config/config.json
		npm start &
	fi
	# Give child processes a chance to spawn.
	sleep 5
	echo 'comicsbot started'
}

stop() {
	echo 'stopping comicsbot'
	# Attempt to kill gracefully. Exit the loop by pkill not recognizing
	# the signal.
	set -- TERM TERM KILL BOGUS
	while pkill -"$1" -f '^comicsbot' 2>/dev/null; do
		sleep 1
		shift
	done || true
}

restart() {
	precache
	stop || true
	start
}

"$1"
