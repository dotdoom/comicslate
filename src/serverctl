#!/usr/bin/env bash

set -e

export PATH=/sbin:/bin:/usr/sbin:/usr/bin:/usr/local/sbin:/usr/local/bin

notify() {
	local subject="$1"
	shift
	# Ignore any errors sending mail to avoid breaking script.
	<<MAIL sendmail "${USER:-root}" || true
Subject: $0: ${subject}
To: ${USER}

$@

===== processes =====
$(ps auxww)

===== version information =====
$(cat /docker_repo_version)
MAIL
}

update_whitelisted_ips() {
	local whitelist=/etc/apache2/conf-available/whitelisted_ip.part
	echo '# Autogenerated list of IPs allowed for the web server' \
		> "${whitelist?}.new"

	echo $'\n# CloudFlare IPv4' >> "${whitelist?}.new"
	curl -sSL https://www.cloudflare.com/ips-v4 | \
		sed 's/^/  Require ip /' >> "${whitelist?}.new"

	echo $'\n# CloudFlare IPv6' >> "${whitelist?}.new"
	curl -sSL https://www.cloudflare.com/ips-v6 | \
		sed 's/^/  Require ip /' >> "${whitelist?}.new"

	mv -f "${whitelist?}.new" "${whitelist?}"
}

create_archives() {
	local archives_root=/var/www/.htsecure/archives
	mkdir -p "${archives_root?}"
	local archives_prefix="$(date '+%Y-%m-%d_%H-%M-%S')"

	7zr a "${archives_root?}/pages_${archives_prefix?}.7z" \
		/var/www/comicslate.org/data/pages >/dev/null
	7zr a "${archives_root?}/meta_${archives_prefix?}.7z" \
		/var/www/comicslate.org/data/meta >/dev/null
}

cron() {
	local failure=''
	update_whitelisted_ips || failure=1
	# Reload Apache and FTP daemons to pick up new certificates.
	service apache2 reload > /dev/null || failure=1
	service vsftpd restart > /dev/null || failure=1

	create_archives || failure=1
	service vmtouch restart || failure=1

	# This excludes .htsecure directory on purpose.
	chown -R www-data:www-data /var/www/* || failure=1
	chmod -R u=rwX,g=rX,o= /var/www/* || failure=1

	test -z "$failure"
}

add_user_alias() {
	local shadow=/var/www/.htsecure/shadow
	if [ -e "${shadow?}" ]; then
		# Add web user, ignore "username already in use".
		useradd \
			--uid "$(id -u www-data)" --non-unique \
			--gid "$(id -g www-data)" --no-user-group \
			--home-dir ~www-data --no-create-home \
			--shell /bin/sh \
			--password $(<"${shadow?}") || \
			[ "$?" -eq 9 ]
	fi
}

start_services() {
	local failure=''
	for service in "$@"; do
		if ! service "${service?}" start; then
			echo "Failed to start service ${service?}" >&2
			failure=1
		fi
	done
	test -z "$failure"
}

start() {
	local failure=''
	add_user_alias || failure=1
	update_whitelisted_ips || failure=1

	# See Dockerfile for rationale why it's not a symlink.
	rm -rf /etc/nullmailer
	cp -r /var/www/.htsecure/nullmailer /etc &&
		chown -R mail:mail /etc/nullmailer &&
		chmod -R u=rX,g=rX,o= /etc/nullmailer &&
		chmod 0751 /etc/nullmailer &&
		chmod 0644 /etc/nullmailer/defaulthost || failure=1

	# Apache will refuse to start without logs directory.
	mkdir -p /var/www/.htsecure/log

	start_services \
		syslog-ng \
		nullmailer \
		cron \
		vsftpd \
		vmtouch \
		comicsbot || failure=1

	if [ -t 1 ]; then
		echo 'TTY detected, assuming debug session.'
		echo 'Starting Web server in background and dropping to shell.'
		if ! apachectl start; then
			echo 'WARNING: starting Web server failed.' \
				'Disabling SSL.' >&2
			apachectl -D NoSSL
		fi
		exec bash
	fi

	# If test fails, try starting wihtout SSL certs (most common reason).
	local apacheargs=''
	if ! apachectl -t; then
		failure=1
		apacheargs='-D NoSSL'
	fi

	if [ -n "$failure" ]; then
		notify failure 'Start has encountered issues.'
	else
		notify started 'Started successfully.'
	fi

	exec apache2-foreground $apacheargs
}

cmd="${1?command argument required}"
shift
"${cmd?}" "$@"
