#!/usr/bin/env bash

set -e

export PATH=/sbin:/bin:/usr/sbin:/usr/bin:/usr/local/sbin:/usr/local/bin

notify() {
	local subject="$1"
	shift
	# Ignore any errors sending mail to avoid breaking script.
	<<MAIL cat - /docker_repo_version | sendmail "${USER:-root}" || true
Subject: $0: ${subject}
To: ${USER}

$@

===== version information =====
MAIL
}

update_whitelisted_ips() {
	local whitelist=/etc/apache2/conf-available/whitelisted_ip.part
	curl -sSL https://www.cloudflare.com/ips-v{4,6} | \
		sed 's/^/  Require ip /' > "${whitelist?}.new"
	getent ahosts pool.sysmon.hetzner.com | \
		awk '!seen[$1]++ { print "  Require ip", $1 }' | \
		sort >> "${whitelist?}.new"
	mv -f "${whitelist?}.new" "${whitelist?}"
}

create_archives() {
	local archives_root=/var/www/.htsecure/archives
	mkdir -p "${archives_root?}"
	local archives_prefix="$(date '+%Y-%m-%d_%H-%M-%S')"

	7zr a "${archives_root?}/pages_${archives_prefix?}.7z" \
		/var/www/comicslate.org/data/pages >/dev/null
	7zr a "${archives_root?}/meta_${archives_prefix?}.7z" \
		/var/www/comicslate.org/data/meta >/dev/null
}

upload_backup() {
	local backup_round="$(($(date +%_j) % 10))"
	tar -C /var/www -cp \
		--exclude-tag-all=purgefile \
		--exclude=u \
		--exclude=./.htsecure/log \
		--exclude=./.htsecure/archives \
		. | \
		gsutil -q cp - \
		"gs://comicslate-org-backup/backup-${backup_round?}.tar"
}

cron() {
	update_whitelisted_ips || failure=1
	# Reload Apache and FTP daemons to pick up new certificates.
	service apache2 reload > /dev/null || failure=1
	service vsftpd restart > /dev/null || failure=1

	create_archives || failure=1
	upload_backup || failure=1
	service vmtouch restart || failure=1
	test -z "$failure"
}

add_user_alias() {
	local shadow=/var/www/.htsecure/shadow
	if [ -e "${shadow?}" ]; then
		# Add web user, ignore "username already in use".
		useradd \
			--uid "$(id -u www-data)" --non-unique \
			--gid "$(id -g www-data)" --no-user-group \
			--home-dir ~www-data --no-create-home \
			--shell /bin/sh \
			--password $(<"${shadow?}") || \
			[ "$?" -eq 9 ]
	fi
}

start_services() {
	for service in "$@"; do
		if ! service "${service?}" start; then
			echo "Failed to start service ${service?}" >&2
			failure=1
		fi
	done
	test -z "$failure"
}

start() {
	add_user_alias || failure=1
	update_whitelisted_ips || failure=1

	# See Dockerfile for rationale why it's not a symlink.
	rm -rf /etc/nullmailer
	cp -r /var/www/.htsecure/nullmailer /etc &&
		chown -R mail:mail /etc/nullmailer &&
		chmod -R u=rX,g=rX,o= /etc/nullmailer || failure=1

	# GCloud Service Account to be used when uploading backups.
	local key_file=/var/www/.htsecure/backup-service-account.json
	if [ -e "${key_file?}" ]; then
		gcloud -q auth activate-service-account \
			--key-file="${key_file?}" || failure=1
	fi

	# Apache will refuse to start without logs directory.
	mkdir -p /var/www/.htsecure/log

	start_services \
		syslog-ng \
		nullmailer \
		cron \
		vsftpd \
		vmtouch \
		comicsbot || failure=1

	# When we're in a TTY, assume that this is a debug session.
	if [ -t 1 ]; then
		apachectl start || apachectl -D NoSSL
		exec bash
	fi

	# If test fails, try starting wihtout SSL certs (most common reason).
	local apacheargs=''
	if ! apachectl -t; then
		failure=1
		apacheargs='-D NoSSL'
	fi

	if [ -n "$failure" ]; then
		notify failure 'Start encountered issues.'
	else
		notify started 'Started successfully.'
	fi

	exec apache2-foreground $apacheargs
}

cmd="${1?command argument required}"
shift
"${cmd?}" "$@"
